name: Deploy Marketing Site to S3 + CloudFront

on:
    push:
        branches:
            - main
            - feature/temporary_landing
    workflow_dispatch:
        # Manual trigger for deployment

env:
    AWS_REGION: ap-southeast-1
    S3_BUCKET: lexrag-site
    CLOUDFRONT_DISTRIBUTION_ID: E1KNCYS7QKEZ5Q

jobs:
    deploy:
        name: Build & Deploy Marketing Site
        runs-on: ubuntu-latest

        permissions:
            id-token: write
            contents: read

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22.x'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run linting
              run: npm run lint

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Build static site
              run: |
                  npm run build
              env:
                  NEXT_PUBLIC_APP_URL: https://app.lexrag.com
                  NEXT_PUBLIC_BASE_URL: https://d26ppb9osin3vx.cloudfront.net
                  NEXT_PUBLIC_SEGMENT_ENABLED: true
                  NEXT_PUBLIC_SEGMENT_DEBUG: false
                  NEXT_PUBLIC_SEGMENT_WRITE_KEY: ${{ secrets.NEXT_PUBLIC_SEGMENT_WRITE_KEY }}
                  NEXT_PUBLIC_ANALYTICS_VIA_BEACON: false
                  NODE_ENV: production

            - name: Deploy to S3
              run: |
                  aws s3 sync out/ s3://${{ env.S3_BUCKET }} --delete --cache-control "public, max-age=31536000, immutable"
                  aws s3 cp out/ s3://${{ env.S3_BUCKET }} --recursive --exclude "*" --include "*.html" --cache-control "public, max-age=0, no-cache, no-store, must-revalidate"
                  aws s3 cp out/ s3://${{ env.S3_BUCKET }} --recursive --exclude "*" --include "*.xml" --cache-control "public, max-age=0, no-cache, no-store, must-revalidate"

            - name: Invalidate CloudFront cache
              run: |
                  aws cloudfront create-invalidation \
                      --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
                      --paths "/*"

            - name: Deploy complete
              run: |
                  echo "‚úÖ Deployment completed successfully!"
                  echo "üåê Site URL: https://d26ppb9osin3vx.cloudfront.net"
                  echo "üìä CloudFront Distribution: ${{ env.CLOUDFRONT_DISTRIBUTION_ID }}"
